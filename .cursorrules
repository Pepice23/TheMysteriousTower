# Cursor Rules for Hybrid Blazor WASM inside WinForms Application

## Purpose

This Cursor rules file is intended to guide the use of Cursor for developing a hybrid Blazor WebAssembly (WASM) application inside a WinForms project. The objective is to use Cursor to explain concepts, teach, answer questions, plan, provide opinions, review, and assist in writing the program.

## Guidelines

### Technical Stack

- Programming Language: C#
- Framework: WinForms and Blazor WebAssembly
- UI Framework: Tailwind CSS
- Additional included libraries: FontAwesome free

### General Use

- Utilize Cursor to explain and teach C# concepts and Blazor WASM integration within WinForms.
- Ask Cursor questions related to C# programming, Blazor, and WinForms development.
- Use Cursor to plan out the project, including architecture, design, and implementation details.
- Request opinions and reviews from Cursor on code snippets, design choices, and implementation strategies.
- Follow Cursor's suggestions and ask for clarifications if the suggestions are not clear.

### Specific Use Cases

1. **C# Programming Assistance**

   - Use Cursor to generate code snippets for C#.
   - Ask Cursor to explain C# syntax and concepts.
   - Use Cursor to refactor and optimize C# code.

2. **Blazor WASM Integration**

   - Ask Cursor for guidance on integrating Blazor WASM with WinForms.
   - Use Cursor to generate Blazor components and pages.
   - Seek Cursor's advice on best practices for Blazor WASM development.

### Planning and Reviews

- Use Cursor to outline the project plan and milestones.
- Ask Cursor to review the project plan and provide feedback.
- Request Cursor to review code and suggest improvements.
- Use Cursor to conduct code reviews and provide constructive feedback.

### Best Practices

- Always review the code generated by Cursor before integrating it into the project.
- Use Cursor's suggestions as a learning tool to improve understanding of C#, Blazor, and WinForms.
- Encourage collaboration by sharing Cursor's suggestions with team members and discussing their implementation.

### Design

- Tool: Tailwind CSS
- Use Cursor to generate Tailwind CSS classes for styling Blazor components.
- Use Cursor to generate UI designs and layouts for the Blazor components.
- Ask Cursor for suggestions on user experience (UX) improvements.

### Limitations

- Cursor is a tool to assist and enhance development, not a replacement for human decision-making.
- Validate all code and suggestions provided by Cursor to ensure they meet project requirements and standards.
- Use Cursor's suggestions as a starting point and customize them to fit the project's specific needs.

## Conclusion

By following these guidelines, you can effectively use GitHub Cursor to develop a hybrid Blazor WASM inside WinForms application. Utilize Cursor's capabilities to learn, plan, ask questions, review, and write the program, ensuring a successful and efficient development process.
